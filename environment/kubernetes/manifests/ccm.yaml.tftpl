---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    vcluster.loft.sh/node-provider: ${node_provider_name}
  name: aws-cloud-controller-manager-${suffix}
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    vcluster.loft.sh/node-provider: ${node_provider_name}
  name: aws-cloud-controller-manager-${suffix}
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["list", "patch", "update", "watch"]
  - apiGroups: [""]
    resources: ["services/status"]
    verbs: ["list", "patch", "update", "watch"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["create", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "update", "watch"]
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["create", "get", "list", "watch", "update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["create", "get", "list", "watch", "update"]
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    vcluster.loft.sh/node-provider: ${node_provider_name}
  name: aws-cloud-controller-manager-${suffix}-api-auth
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: aws-cloud-controller-manager-${suffix}
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    vcluster.loft.sh/node-provider: ${node_provider_name}
  name: aws-cloud-controller-manager-${suffix}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-cloud-controller-manager-${suffix}
subjects:
  - kind: ServiceAccount
    name: aws-cloud-controller-manager-${suffix}
    namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    vcluster.loft.sh/node-provider: ${node_provider_name}
  name: aws-cloud-config-${suffix}
  namespace: kube-system
data:
  cloud-config: |
    [Global]
    NLBSecurityGroupMode = Managed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    vcluster.loft.sh/node-provider: ${node_provider_name}
  name: aws-cloud-controller-manager-${suffix}
  namespace: kube-system
  labels:
    k8s-app: aws-cloud-controller-manager-${suffix}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: aws-cloud-controller-manager-${suffix}
  template:
    metadata:
      labels:
        k8s-app: aws-cloud-controller-manager-${suffix}
    spec:
      hostNetwork: true
      dnsPolicy: Default
      serviceAccountName: aws-cloud-controller-manager-${suffix}
      priorityClassName: system-cluster-critical
      nodeSelector:
        vcluster.loft.sh/node-provider: ${node_provider_name}
      containers:
        - name: aws-cloud-controller-manager
          image: registry.k8s.io/provider-aws/cloud-controller-manager:v1.34.0
          args:
            - --v=2
            - --cloud-provider=aws
            - --cloud-config=/etc/kubernetes/cloud-config
            - --use-service-account-credentials=false
            - --configure-cloud-routes=false
            - --leader-elect-resource-name=aws-cloud-controller-manager-${suffix}
            - --cluster-name=${vcluster_name}
            - --controllers=${controllers}
          resources:
            requests:
              cpu: "200m"
          volumeMounts:
            - name: cloud-config
              mountPath: /etc/kubernetes
              readOnly: true
      volumes:
        - name: cloud-config
          configMap:
            name: aws-cloud-config-${suffix}
            items:
              - key: cloud-config
                path: cloud-config
      tolerations:
        - key: node.cloudprovider.kubernetes.io/uninitialized
          operator: Equal
          value: "true"
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: karpenter.sh/unregistered
          operator: "Exists"
          effect: NoExecute
        - key: node.kubernetes.io/not-ready
          effect: NoSchedule
        - key: "vcluster.com/cleanup"
          operator: "Exists"
          effect: "NoExecute"
